<%
    # RNB, A VIM COLORSCHEME TEMPLATE
    # Author:        Romain Lafourcade (https://github.com/romainl)
    # Canonical URL: https://github.com/romainl/vim-rnb

    information = {
        author:      "Alex Vear",
        email:       "alex@vear.uk",
        name:        "raider",
        description: "A Vim colour scheme for archaeological escapades.",
        background:  "dark",
        webpage:     "https://github.com/axvr/raider.vim",
        licence:     "MIT (2021)"
    }

    # Color palette:
    #
    # black = [       give each color a distinctive name
    #   "#000000",    hexadecimal color used in GVim/MacVim or "NONE"
    #   0,            integer between 0 and 255 used by terminals supporting 256 colors
    #                 or "NONE"
    #   "black"       color name used by less capable color terminals, can be "darkred",
    #                 "red", "darkgreen", "green", "darkyellow", "yellow", "darkblue",
    #                 "blue", "darkmagenta", "magenta", "black", "darkgrey", "grey",
    #                 "white", or "NONE"
    # ]
    #
    # If your colors are defined correctly, the resulting colorscheme is
    # guaranteed to work in GVim (Windows/Linux), MacVim (MacOS), and any
    # properly set up terminal emulator.

    # TODO: 256 colours.
    # TODO: Improve colours.

    brown  = ["#88766F", 95, "darkyellow"]   # Light redish brown.
    khaki  = ["#998B70", 137, "darkyellow"]  # Light yellowish-brown.
    yellow = ["#EAB56B", 179, "yellow"]      # Brownish pale yellow.
    red    = ["#A74F4F", 131, "red"]         # Pale red.

    slate = ["#858CA6", 103, "darkblue"]      # Purplish blue.
    teal  = ["#94BACA", 110, "blue"]          # Pale blueish-teal.
    darkteal = ["#96A8A1", 109, "darkgreen"]  # Pale greenish-teal.
    green = ["#679D80", 72, "green"]          # Pale blueish-green.

    fg = ["#C9C9C9", 251, "white"]           # Foreground.
    fg_alt = ["#666967", 242, "grey"]        # Darker foreground.

    bg = ["#222222", 235, "black"]           # Background.
    bg_alt = ["#2A2A2A", 238, "darkgrey"]    # Light background.

    layer = ["#343434", 237, "darkgrey"]     # Layer on background.
    layer_alt = ["#1A1A1A", 234, "darkgrey"]

    hidden = ["#4A4A4A", 239, "darkgrey"]

    # Highlights:
    #
    # You can define highlight groups like this:
    #
    #   [ "Normal",       name of the highlight group
    #     white,          the color used for background color, or use "NONE", "fg" or "bg"
    #     darkgray,       the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "NONE"          style, can be "bold", "underline", "reverse", "italic",
    #                     "standout", "NONE" or "undercurl"
    #   ]
    #
    # The sample above tells Vim to render normal text in dark gray against
    # a white background, without any other styling.
    #
    # Or you can link an highlight group to another. Here, "Title" will inherit
    # its style from "Normal":
    #
    #   [ "Title", "Normal" ]
    #
    # In GUI Vim, there is an additional color for the undercurl used to
    # highlight spelling mistakes:
    #
    #   [ "SpellBad",     name of the highlight group
    #     "NONE",         the color used for background color, or use "NONE", "fg" or "bg"
    #     red,            the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "undercurl",    style
    #     red             color used for the undercurl
    #   ]
    #
    # The sample above tells Vim to render badly spelled words in red against
    # the current background, with a red undercurl.

    highlights = [
        [ "Normal", bg, fg, "NONE" ],
        [ "NonText", "bg", hidden, "NONE" ],
        [ "Comment", "bg", fg_alt, "NONE" ],
        [ "Conceal", "NonText" ],

        [ "Constant", "bg", brown, "NONE" ],
        [ "Character", "Constant" ],
        [ "Number", "Constant" ],
        [ "Float", "Number" ],
        [ "Boolean", "Constant" ],

        [ "String", "bg", teal, "NONE" ],

        [ "Identifier", "bg", darkteal, "NONE" ],
        [ "Function", "Identifier" ],

        [ "Statement", "bg", khaki, "NONE" ],
        [ "Conditonal", "Statement" ],
        [ "Repeat", "Statement" ],
        [ "Label", "Statement" ],
        [ "Exception", "bg", red, "NONE" ],

        [ "Keyword", "bg", slate, "NONE" ],

        [ "Operator", "bg", fg, "NONE" ],

        [ "PreProc", "bg", brown, "NONE" ],
        [ "Include", "bg", brown, "NONE" ],

        [ "Macro", "bg", brown, "NONE" ],
        [ "Define", "bg", khaki, "NONE" ],  # TODO: different colour?
        [ "PreCondit", "Define" ],

        [ "Type", "bg", slate, "NONE" ],
        [ "StorageClass", "Type" ],
        [ "Structure", "Type" ],
        [ "Typedef", "Type" ],

        [ "Special", "bg", fg_alt, "NONE" ],
        [ "SpecialChar", "Special" ],
        [ "Tag", "Special" ],
        [ "Delimiter", "Special" ],
        [ "SpecialComment", "Special" ],
        [ "Debug", "Special" ],

        [ "Error", "NONE", red, "bold" ],
        [ "ErrorMsg", "Error" ],
        [ "Warning", "NONE", yellow, "bold" ],
        [ "WarningMsg", "Warning" ],

        [ "ModeMsg", "NONE", teal, "NONE" ],
        [ "MoreMsg", "ModeMsg" ],
        [ "Question", "ModeMsg" ],

        [ "Ignore", "NonText" ],
        [ "Todo", "NONE", green, "bold" ],
        [ "Underlined", "NONE", fg, "underline" ],

        [ "StatusLine", layer, khaki, "NONE" ],
        [ "StatusLineNC", bg_alt, fg_alt, "NONE" ],
        [ "StatusLineTerm", "StatusLine" ],
        [ "StatusLineTermNC", "StatusLineNC" ],
        [ "TabLine", "StatusLineNC" ],
        [ "TabLineFill", "StatusLineNC" ],
        [ "TabLineSel", "StatusLine" ],
        [ "WildMenu", bg_alt, yellow, "NONE" ],
        [ "VertSplit", bg_alt, bg_alt, "NONE" ],

        [ "Title", "NONE", khaki, "bold" ],

        [ "LineNr", "NONE", fg_alt, "NONE" ],
        [ "CursorLineNr", bg_alt, yellow, "NONE" ],
        [ "Cursor", fg, bg, "NONE" ],
        [ "CursorLine", bg_alt, "NONE", "NONE" ],
        [ "CursorColumn", "CursorLine" ],
        [ "ColorColumn", layer_alt, "NONE", "NONE" ],
        [ "SignColumn", "NONE", fg_alt, "NONE" ],

        [ "Visual", layer, "NONE", "NONE" ],
        [ "VisualNOS", layer, "NONE", "NONE" ],

        [ "Pmenu", bg_alt, "NONE", "NONE" ],
        [ "PmenuSbar", layer, "NONE", "NONE" ],
        [ "PmenuSel", layer, khaki, "NONE" ],
        [ "PmenuThumb", teal, "NONE", "NONE" ],

        [ "FoldColumn", "NONE", bg_alt, "NONE" ],
        [ "Folded", layer_alt, fg_alt, "NONE" ],

        [ "SpecialKey", "NONE", khaki, "NONE" ],
        [ "IncSearch", yellow, bg, "NONE" ],
        [ "Search", khaki, bg, "NONE" ],
        [ "Directory", "NONE", teal, "NONE" ],
        [ "MatchParen", "NONE", yellow, "bold" ],

        [ "SpellBad", "NONE", red, "underline" ],
        [ "SpellCap", "NONE", green, "underline" ],
        [ "SpellLocal", "NONE", yellow, "underline" ],
        [ "SpellRare", "SpellLocal" ],

        [ "QuickFixLine", layer_alt, "NONE", "NONE" ],

        [ "DiffAdd", bg_alt, green, "NONE" ],
        [ "DiffChange", bg_alt, "NONE", "NONE" ],
        [ "DiffDelete", bg_alt, red, "NONE" ],
        [ "DiffText", bg_alt, yellow, "NONE" ],
        [ "diffAdded", "DiffAdd" ],
        [ "diffRemoved", "DiffDelete" ],

        [ "helpHyperTextJump", "bg", teal, "NONE" ],
        [ "htmlTag", "Delimiter" ],
        [ "htmlEndTag", "htmlTag" ],
        [ "gitcommitSummary", "Title" ]
    ]

    # Define the color palette used by :terminal when in GUI Vim or in TUI Vim
    # when 'termguicolors' is enabled. If this list is empty or if it doesn't
    # contain exactly 16 items, the corresponding Vim variable won't be set.
    terminal_ansi_colors = [
        # Dark
        bg,           # black
        red,          # red
        green,        # green
        khaki,        # yellow
        ["#3465a4"],  # blue
        ["#75507b"],  # magenta
        ["#29acc1"],  # cyan
        fg_alt,       # white

        # Bright
        bg_alt,       # black
        ["#c61c29"],  # red
        ["#2bb469"],  # green
        yellow,       # yellow
        teal,         # blue
        ["#c061cb"],  # magenta
        ["#34e2e2"],  # cyan
        fg            # white
    ]

    # Many thanks to Barry Arthur (https://github.com/dahu) for the original idea.
-%>
" Name:        <%= information[:name] %>.vim
" Author:      <%= information[:author] %> <<%= information[:email] %>>
" Webpage:     <%= information[:webpage] %>
" Description: <%= information[:description] %>
" Licence:     <%= information[:licence] %>
" Last Change: <%= Time.new.strftime "%Y-%m-%d" %>

hi clear
if exists("syntax_on")
  syntax reset
endif

let colors_name = "<%= information[:name].downcase %>"

if ($TERM =~ '256' || &t_Co >= 256) || has("gui_running")
<% for highlight in highlights -%>
<% if highlight.length == 4 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
<%= '' %>
    set background=<%= information[:background] %>
<%= '' %>
<% end -%>
<% elsif highlight.length > 4 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %> guisp=<%= highlight[4].kind_of?(String) ? highlight[4] : highlight[4][0] %>
<% end -%>
<% end -%>

elseif &t_Co == 8 || $TERM !~# '^linux' || &t_Co == 16
    set t_Co=16
<%= '' %>
<% for highlight in highlights -%>
<% if highlight.length > 2 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][2] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][2] %> cterm=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
<%= '' %>
    set background=<%= information[:background] %>
<%= '' %>
<% end -%>
<% end -%>
<% end -%>
endif
<% links = highlights.select do |highlight| -%>
<% highlight.length == 2 -%>
<% end -%>
<% if links.length > 0 -%>
<%= '' %>
<% for link in links -%>
hi! link <%= link[0] %> <%= link[1] %>
<% end -%>
<% end -%>
<% if terminal_ansi_colors.length == 16 -%>
<%= '' %>
if has('nvim')
<% terminal_ansi_colors.each_with_index do |color,index| -%>
    let g:terminal_color_<%= index %> = '<%= color[0] %>'
<% end -%>
else
    let g:terminal_ansi_colors = [
<% for color in terminal_ansi_colors -%>
            \ '<%= color[0] %>',
<% end -%>
            \ ]
endif
<% end -%>

" Generated with RNB (https://github.com/romainl/vim-rnb)
